plugins {
    id 'java'
    id 'maven-publish'
    id 'org.ajoberstar.grgit' version '5.2.0'
}

group = 'dev.gigaherz.versible'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.jetbrains:annotations:23.0.0'

    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
}

java {
    withSourcesJar()
    withJavadocJar()
}

tasks.named('sourcesJar') {
    from(project.file("LICENSE.txt"))
}

tasks.named('jar') {
    from(project.file("LICENSE.txt"))

    manifest {
        attributes([
                "Specification-Title": "versible",
                "Specification-Vendor": "gigaherz",
                "Specification-Version": "1.0",
                "Implementation-Title": "versible",
                "Implementation-Version": project.version,
                "Implementation-Vendor" :"gigaherz",
                "Implementation-Timestamp": grgit.head().dateTime.format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "Automatic-Module-Name": project.group,
                "Source-Repository": "https://github.com/gigaherz/Versible",
                "Git-Commit": grgit.head().id
        ])
    }
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

tasks.named('publish') {
    doFirst {
        if (!grgit.status().isClean())
        {
            throw new IllegalStateException("Commit first!");
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId project.archivesBaseName
            from components.java

            artifact sourcesJar
            artifact javadocJar
        }
    }

    repositories {
        if (findProperty("RELEASE") && System.env.giga_maven_host != null) {
            System.out.println("Remote publish enabled on " + System.env.giga_maven_host)
            maven {
                url System.env.giga_maven_host
                credentials {
                    username System.env.giga_maven_user
                    password System.env.giga_maven_password
                }
            }
        }
        else {
            System.out.println("Remote publish disabled.")
        }
    }
}